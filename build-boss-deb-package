#!/usr/bin/env bash
# Builds a deb package of boss for armhf.
# Must be run from the root of the repo, inside the builder container.

set -euo pipefail

# get the version string from Cargo.toml
boss_version=$(awk -F "=" '/^version/ {print $2}' Cargo.toml | tr -d '"' | tr -d ' ')

# Append +BOSS_GIT_VERSION (e.g. "+master-0123abc") to the Cargo.toml version
boss_package_version="${boss_version}+${BOSS_GIT_VERSION}"
echo "boss_package_version: ${boss_package_version}"

# Fetch crates so that we have a zware_rs crate available before the build
cargo fetch --target=armv7-unknown-linux-gnueabihf --locked

# Extract the latest 'zwave_device_rec.txt' from the zware_rs crate so we can ship it in the deb.
cp -f $(find ${HOME}/.cargo/git/checkouts/zware_rs* -iname zwave_device_rec.txt | head -n1) ./zwave_device_rec.txt

# Make the deb!
cargo deb --deb-version="${boss_package_version}" --target=armv7-unknown-linux-gnueabihf --no-strip -- --locked --all-features

# Cleanliness is valued.
rm -f ./zwave_device_rec.txt

# Write the boss version string out to a file that we can eventually copy into the balena-boss-runtime repo
echo "${boss_package_version}" > target/armv7-unknown-linux-gnueabihf/debian/boss_package_version.txt
